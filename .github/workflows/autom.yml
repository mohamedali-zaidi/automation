name: Jira Notification and Approval Workflow

on:
  repository_dispatch:
    types: [jira_webhook]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Debug Webhook Data
      - name: Debug Webhook Data
        run: |
          echo "Webhook data received: ${{ toJson(github.event.client_payload) }}"

      # Step 2: Debug Individual Fields
      - name: Debug Individual Fields
        run: |
          echo "Issue Summary: '${{ github.event.client_payload.issue.fields.summary }}'"
          echo "Assigned Developer: '${{ github.event.client_payload.issue.fields.assignee.displayName }}'"
          echo "Due Date: '${{ github.event.client_payload.issue.fields.duedate }}'"
          echo "Status: '${{ github.event.client_payload.issue.fields.status.name }}'"

      # Step 3: Send Notification to MS Teams
      - name: Send Notification to MS Teams
        run: |
          ISSUE_SUMMARY=$(echo "${{ github.event.client_payload.issue.fields.summary }}" | sed 's/"/\\"/g')
          ASSIGNEE=$(echo "${{ github.event.client_payload.issue.fields.assignee.displayName }}" | sed 's/"/\\"/g')
          DUE_DATE=$(echo "${{ github.event.client_payload.issue.fields.duedate }}" | sed 's/"/\\"/g')
          STATUS=$(echo "${{ github.event.client_payload.issue.fields.status.name }}" | sed 's/"/\\"/g')

          JSON_PAYLOAD=$(cat <<EOF
          {
            "text": "**Issue Summary:** $ISSUE_SUMMARY \n**Assigned Developer:** $ASSIGNEE \n**Due Date:** $DUE_DATE \n**Status:** $STATUS \n[View Issue](https://mohamedalizaidi48.atlassian.net/browse/${{ github.event.client_payload.issue.key }})"
          }
          EOF
          )

          curl -H "Content-Type: application/json" -d "$JSON_PAYLOAD" https://avaxia.webhook.office.com/webhookb2/aa5a370b-ad1a-4c10-b494-e15d9490f751@7ecf1dcb-eca3-4727-8201-49cf4c94b669/IncomingWebhook/77dc558b4d66402db52b304ce78097e7/c4682019-2eb9-4850-9ea4-d512675d55bb/V2Pd7iajBd6SYzb33ivoOoma3Tds6gdz6Eh0mRcUvO2UU1

      # Step 4: Send an Adaptive Card for Approval to MS Teams
      - name: Send Adaptive Card for Approval
        run: |
          ISSUE_KEY="${{ github.event.client_payload.issue.key }}"
          ISSUE_SUMMARY=$(echo "${{ github.event.client_payload.issue.fields.summary }}" | sed 's/"/\\"/g')

          # Construct the Adaptive Card JSON payload
          ADAPTIVE_CARD_PAYLOAD=$(cat <<EOF
          {
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "\$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "type": "AdaptiveCard",
                  "version": "1.3",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "Approval Required for Issue: $ISSUE_SUMMARY",
                      "weight": "Bolder",
                      "size": "Medium"
                    },
                    {
                      "type": "TextBlock",
                      "text": "[View Issue](https://mohamedalizaidi48.atlassian.net/browse/$ISSUE_KEY)",
                      "wrap": true
                    }
                  ],
                  "actions": [
                    {
                      "type": "Action.Submit",
                      "title": "Approve",
                      "data": {
                        "action": "approve",
                        "issueKey": "$ISSUE_KEY"
                      }
                    },
                    {
                      "type": "Action.Submit",
                      "title": "Reject",
                      "data": {
                        "action": "reject",
                        "issueKey": "$ISSUE_KEY"
                      }
                    }
                  ]
                }
              }
            ]
          }
          EOF
          )

          # Send the Adaptive Card to MS Teams
          curl -H "Content-Type: application/json" -d "$ADAPTIVE_CARD_PAYLOAD" https://avaxia.webhook.office.com/webhookb2/aa5a370b-ad1a-4c10-b494-e15d9490f751@7ecf1dcb-eca3-4727-8201-49cf4c94b669/IncomingWebhook/77dc558b4d66402db52b304ce78097e7/c4682019-2eb9-4850-9ea4-d512675d55bb/V2Pd7iajBd6SYzb33ivoOoma3Tds6gdz6Eh0mRcUvO2UU1

      # Step 5: Pause and Await Response
      - name: Wait for Approval Response
        id: approval
        run: |
          echo "Waiting for approval response..."
          sleep 60 # Polling interval; adjust as needed
          # Here, implement a mechanism to check for the approval status
          # For instance, you can use a serverless function that listens for MS Teams approval response

      # Step 6a: Update Jira Issue Status for Approved
      - name: Update Jira Issue to Approved
        if: steps.approval.outputs.result == 'approve'
        run: |
          ISSUE_KEY="${{ github.event.client_payload.issue.key }}"
          curl -X PUT -H "Content-Type: application/json" \
          -H "Authorization: Basic ${{ secrets.JIRA_API_TOKEN }}" \
          --data '{"fields": {"status": {"name": "Approved"}}}' \
          https://mohamedalizaidi48.atlassian.net/rest/api/2/issue/$ISSUE_KEY

      # Step 6b: Update Jira Issue Status for Rejected
      - name: Update Jira Issue to Rejected
        if: steps.approval.outputs.result == 'reject'
        run: |
          ISSUE_KEY="${{ github.event.client_payload.issue.key }}"
          curl -X PUT -H "Content-Type: application/json" \
          -H "Authorization: Basic ${{ secrets.JIRA_API_TOKEN }}" \
          --data '{"fields": {"status": {"name": "Rejected"}}}' \
          https://mohamedalizaidi48.atlassian.net/rest/api/2/issue/$ISSUE_KEY
